https://qiita.com/TakeshiNickOsanai/items/8d012a128827c9db980d

あとで参照したくなりそうな情報
-----------------------------------------------------------------------------
Push通知について
PWAユーザーに対して通知を送れる機能。

ユーザーに通知を送るAPIとしては

Notifications API
Push API
の2つがある。PWAの世界で一般的に「プッシュ通知」について説明する場合、後者のPush APIを利用したものを指す。

Push APIを利用すると、アプリを利用中のユーザーに対してプッシュ通知を送ることができるが、通知用のサーバーが必要になる。また、秘密鍵と公開鍵を作成して、アプリ側に公開鍵をセットする必要がある。

プッシュ通知はサーバーが必要なことから、Firebase を利用した実装を見ることが多い。
(必ずしもFirebaseである必要はないが、Firebaseを使う実装が手っ取り早い)
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
manifest.jsonの設定
manifst.jsonでは

short name
　ユーザーのホーム画面でテキストとして使用
name
　ウェブアプリのインストール バナーに使用

の2つは必須。他に、以下のような情報を記述する。

icons
　アプリのアイコン画像。スマホのホーム画面登録時、および起動時のスプラッシュ画面などに使われる。
start_url
　起動時のURL。省略可能だが、指定したほうが良い。省略した場合、登録時に表示されている画面のURLが起動画面となる
background_color
　アプリ起動時のスプラッシュ画面の背景色
display
　アプリの表示タイプ。「standalone」を指定すると、ブラウザのUIが非表示となり、アプリっぽい画面になる。「browser」を指定すると、ブラウザのUIが利用される。
orientation
　指定すると、アプリ使用時の画面の向きを矯正する。「landscape」を指定するとスマホを横向けにした操作画面となる。「portrait」を指定すると縦向けの操作となる。
-----------------------------------------------------------------------------

-----------------------------------------------------------------------------
Service Worker を利用したデータキャッシュ
次に、Service Worker 登録用のJSを作成する。

Service Worker 登録用のファイルでは大まかに言って
・キャシュするファイルの定義
・スコープの定義
・キャッシュのインストール、フェッチ、アクティベートの設定
などを行う。
-----------------------------------------------------------------------------

まだ途中だけど、まずはキャッシュのバージョン管理（旧をキャッシュ内から削除して、新をフェッチする）をできるようにする必要がありそうなので
それが出来てから続きを読む。
